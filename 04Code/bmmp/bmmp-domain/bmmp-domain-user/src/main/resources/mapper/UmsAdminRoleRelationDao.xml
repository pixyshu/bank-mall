<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suue.bmmp.dao.UmsAdminRoleRelationDao">

    <resultMap type="com.suue.bmmp.entity.UmsAdminRoleRelation" id="UmsAdminRoleRelationMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="adminId" column="admin_id" jdbcType="INTEGER"/>
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UmsAdminRoleRelationMap">
        select
          id, admin_id, role_id
        from ums_admin_role_relation
        where id = #{id}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from ums_admin_role_relation
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="adminId != null">
                and admin_id = #{adminId}
            </if>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into ums_admin_role_relation(admin_id, role_id)
        values (#{adminId}, #{roleId})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into ums_admin_role_relation(admin_id, role_id)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.adminId}, #{entity.roleId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into ums_admin_role_relation(admin_id, role_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.adminId}, #{entity.roleId})
        </foreach>
        on duplicate key update
        admin_id = values(admin_id),
        role_id = values(role_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update ums_admin_role_relation
        <set>
            <if test="adminId != null">
                admin_id = #{adminId},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from ums_admin_role_relation where id = #{id}
    </delete>

<!--条件查询所有数据-->
    <select id="queryAll" resultMap="UmsAdminRoleRelationMap">
        select
          id, admin_id, role_id
        from ums_admin_role_relation
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="adminId != null">
                and admin_id = #{adminId}
            </if>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
        </where>
    </select>

    <select id="getRoleList" resultMap="com.suue.bmmp.dao.UmsRoleDao.UmsRoleMap">
        select r.*
        from ums_admin_role_relation ar left join ums_role r on ar.role_id = r.id
        where ar.admin_id = #{adminId}
    </select>
    <!--  删除用户的ID的权限  -->
    <delete id="delByAdminId">
        delete
        from ums_admin_role_relation
        where admin_id = #{adminId,jdbcType=NUMERIC}
    </delete>

    <!--批量新增回写主键支持-->
    <insert id="insertList">
        INSERT INTO ums_admin_role_relation (admin_id, role_id) VALUES
        <foreach collection="list" separator="," item="item" index="index">
            (#{item.adminId,jdbcType=BIGINT},
            #{item.roleId,jdbcType=BIGINT})
        </foreach>
    </insert>
</mapper>


